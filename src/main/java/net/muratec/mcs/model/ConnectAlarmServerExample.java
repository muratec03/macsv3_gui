package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;

public class ConnectAlarmServerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public ConnectAlarmServerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andConnectServerNameIsNull() {
            addCriterion("CONNECT_SERVER_NAME is null");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameIsNotNull() {
            addCriterion("CONNECT_SERVER_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameEqualTo(String value) {
            addCriterion("CONNECT_SERVER_NAME =", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameNotEqualTo(String value) {
            addCriterion("CONNECT_SERVER_NAME <>", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameGreaterThan(String value) {
            addCriterion("CONNECT_SERVER_NAME >", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameGreaterThanOrEqualTo(String value) {
            addCriterion("CONNECT_SERVER_NAME >=", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameLessThan(String value) {
            addCriterion("CONNECT_SERVER_NAME <", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameLessThanOrEqualTo(String value) {
            addCriterion("CONNECT_SERVER_NAME <=", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameLike(String value) {
            addCriterion("CONNECT_SERVER_NAME like", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameNotLike(String value) {
            addCriterion("CONNECT_SERVER_NAME not like", value, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameIn(List<String> values) {
            addCriterion("CONNECT_SERVER_NAME in", values, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameNotIn(List<String> values) {
            addCriterion("CONNECT_SERVER_NAME not in", values, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameBetween(String value1, String value2) {
            addCriterion("CONNECT_SERVER_NAME between", value1, value2, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andConnectServerNameNotBetween(String value1, String value2) {
            addCriterion("CONNECT_SERVER_NAME not between", value1, value2, "connectServerName");
            return (Criteria) this;
        }

        public Criteria andIpAddressIsNull() {
            addCriterion("IP_ADDRESS is null");
            return (Criteria) this;
        }

        public Criteria andIpAddressIsNotNull() {
            addCriterion("IP_ADDRESS is not null");
            return (Criteria) this;
        }

        public Criteria andIpAddressEqualTo(String value) {
            addCriterion("IP_ADDRESS =", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressNotEqualTo(String value) {
            addCriterion("IP_ADDRESS <>", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressGreaterThan(String value) {
            addCriterion("IP_ADDRESS >", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressGreaterThanOrEqualTo(String value) {
            addCriterion("IP_ADDRESS >=", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressLessThan(String value) {
            addCriterion("IP_ADDRESS <", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressLessThanOrEqualTo(String value) {
            addCriterion("IP_ADDRESS <=", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressLike(String value) {
            addCriterion("IP_ADDRESS like", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressNotLike(String value) {
            addCriterion("IP_ADDRESS not like", value, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressIn(List<String> values) {
            addCriterion("IP_ADDRESS in", values, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressNotIn(List<String> values) {
            addCriterion("IP_ADDRESS not in", values, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressBetween(String value1, String value2) {
            addCriterion("IP_ADDRESS between", value1, value2, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andIpAddressNotBetween(String value1, String value2) {
            addCriterion("IP_ADDRESS not between", value1, value2, "ipAddress");
            return (Criteria) this;
        }

        public Criteria andConnectPortIsNull() {
            addCriterion("CONNECT_PORT is null");
            return (Criteria) this;
        }

        public Criteria andConnectPortIsNotNull() {
            addCriterion("CONNECT_PORT is not null");
            return (Criteria) this;
        }

        public Criteria andConnectPortEqualTo(Integer value) {
            addCriterion("CONNECT_PORT =", value, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortNotEqualTo(Integer value) {
            addCriterion("CONNECT_PORT <>", value, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortGreaterThan(Integer value) {
            addCriterion("CONNECT_PORT >", value, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortGreaterThanOrEqualTo(Integer value) {
            addCriterion("CONNECT_PORT >=", value, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortLessThan(Integer value) {
            addCriterion("CONNECT_PORT <", value, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortLessThanOrEqualTo(Integer value) {
            addCriterion("CONNECT_PORT <=", value, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortIn(List<Integer> values) {
            addCriterion("CONNECT_PORT in", values, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortNotIn(List<Integer> values) {
            addCriterion("CONNECT_PORT not in", values, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortBetween(Integer value1, Integer value2) {
            addCriterion("CONNECT_PORT between", value1, value2, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectPortNotBetween(Integer value1, Integer value2) {
            addCriterion("CONNECT_PORT not between", value1, value2, "connectPort");
            return (Criteria) this;
        }

        public Criteria andConnectUrlIsNull() {
            addCriterion("CONNECT_URL is null");
            return (Criteria) this;
        }

        public Criteria andConnectUrlIsNotNull() {
            addCriterion("CONNECT_URL is not null");
            return (Criteria) this;
        }

        public Criteria andConnectUrlEqualTo(String value) {
            addCriterion("CONNECT_URL =", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlNotEqualTo(String value) {
            addCriterion("CONNECT_URL <>", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlGreaterThan(String value) {
            addCriterion("CONNECT_URL >", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlGreaterThanOrEqualTo(String value) {
            addCriterion("CONNECT_URL >=", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlLessThan(String value) {
            addCriterion("CONNECT_URL <", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlLessThanOrEqualTo(String value) {
            addCriterion("CONNECT_URL <=", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlLike(String value) {
            addCriterion("CONNECT_URL like", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlNotLike(String value) {
            addCriterion("CONNECT_URL not like", value, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlIn(List<String> values) {
            addCriterion("CONNECT_URL in", values, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlNotIn(List<String> values) {
            addCriterion("CONNECT_URL not in", values, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlBetween(String value1, String value2) {
            addCriterion("CONNECT_URL between", value1, value2, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andConnectUrlNotBetween(String value1, String value2) {
            addCriterion("CONNECT_URL not between", value1, value2, "connectUrl");
            return (Criteria) this;
        }

        public Criteria andTimeOutIsNull() {
            addCriterion("TIME_OUT is null");
            return (Criteria) this;
        }

        public Criteria andTimeOutIsNotNull() {
            addCriterion("TIME_OUT is not null");
            return (Criteria) this;
        }

        public Criteria andTimeOutEqualTo(Short value) {
            addCriterion("TIME_OUT =", value, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutNotEqualTo(Short value) {
            addCriterion("TIME_OUT <>", value, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutGreaterThan(Short value) {
            addCriterion("TIME_OUT >", value, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutGreaterThanOrEqualTo(Short value) {
            addCriterion("TIME_OUT >=", value, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutLessThan(Short value) {
            addCriterion("TIME_OUT <", value, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutLessThanOrEqualTo(Short value) {
            addCriterion("TIME_OUT <=", value, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutIn(List<Short> values) {
            addCriterion("TIME_OUT in", values, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutNotIn(List<Short> values) {
            addCriterion("TIME_OUT not in", values, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutBetween(Short value1, Short value2) {
            addCriterion("TIME_OUT between", value1, value2, "timeOut");
            return (Criteria) this;
        }

        public Criteria andTimeOutNotBetween(Short value1, Short value2) {
            addCriterion("TIME_OUT not between", value1, value2, "timeOut");
            return (Criteria) this;
        }

        public Criteria andRetryTimeIsNull() {
            addCriterion("RETRY_TIME is null");
            return (Criteria) this;
        }

        public Criteria andRetryTimeIsNotNull() {
            addCriterion("RETRY_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andRetryTimeEqualTo(Short value) {
            addCriterion("RETRY_TIME =", value, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeNotEqualTo(Short value) {
            addCriterion("RETRY_TIME <>", value, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeGreaterThan(Short value) {
            addCriterion("RETRY_TIME >", value, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeGreaterThanOrEqualTo(Short value) {
            addCriterion("RETRY_TIME >=", value, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeLessThan(Short value) {
            addCriterion("RETRY_TIME <", value, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeLessThanOrEqualTo(Short value) {
            addCriterion("RETRY_TIME <=", value, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeIn(List<Short> values) {
            addCriterion("RETRY_TIME in", values, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeNotIn(List<Short> values) {
            addCriterion("RETRY_TIME not in", values, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeBetween(Short value1, Short value2) {
            addCriterion("RETRY_TIME between", value1, value2, "retryTime");
            return (Criteria) this;
        }

        public Criteria andRetryTimeNotBetween(Short value1, Short value2) {
            addCriterion("RETRY_TIME not between", value1, value2, "retryTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CONNECT_ALARM_SERVER
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}