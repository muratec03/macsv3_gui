package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;

public class EmptyCarrierControllerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public EmptyCarrierControllerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andControllerIdIsNull() {
            addCriterion("CONTROLLER_ID is null");
            return (Criteria) this;
        }

        public Criteria andControllerIdIsNotNull() {
            addCriterion("CONTROLLER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andControllerIdEqualTo(String value) {
            addCriterion("CONTROLLER_ID =", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdNotEqualTo(String value) {
            addCriterion("CONTROLLER_ID <>", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdGreaterThan(String value) {
            addCriterion("CONTROLLER_ID >", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdGreaterThanOrEqualTo(String value) {
            addCriterion("CONTROLLER_ID >=", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdLessThan(String value) {
            addCriterion("CONTROLLER_ID <", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdLessThanOrEqualTo(String value) {
            addCriterion("CONTROLLER_ID <=", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdLike(String value) {
            addCriterion("CONTROLLER_ID like", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdNotLike(String value) {
            addCriterion("CONTROLLER_ID not like", value, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdIn(List<String> values) {
            addCriterion("CONTROLLER_ID in", values, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdNotIn(List<String> values) {
            addCriterion("CONTROLLER_ID not in", values, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdBetween(String value1, String value2) {
            addCriterion("CONTROLLER_ID between", value1, value2, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerIdNotBetween(String value1, String value2) {
            addCriterion("CONTROLLER_ID not between", value1, value2, "controllerId");
            return (Criteria) this;
        }

        public Criteria andControllerTypeIsNull() {
            addCriterion("CONTROLLER_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andControllerTypeIsNotNull() {
            addCriterion("CONTROLLER_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andControllerTypeEqualTo(Short value) {
            addCriterion("CONTROLLER_TYPE =", value, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeNotEqualTo(Short value) {
            addCriterion("CONTROLLER_TYPE <>", value, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeGreaterThan(Short value) {
            addCriterion("CONTROLLER_TYPE >", value, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("CONTROLLER_TYPE >=", value, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeLessThan(Short value) {
            addCriterion("CONTROLLER_TYPE <", value, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeLessThanOrEqualTo(Short value) {
            addCriterion("CONTROLLER_TYPE <=", value, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeIn(List<Short> values) {
            addCriterion("CONTROLLER_TYPE in", values, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeNotIn(List<Short> values) {
            addCriterion("CONTROLLER_TYPE not in", values, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeBetween(Short value1, Short value2) {
            addCriterion("CONTROLLER_TYPE between", value1, value2, "controllerType");
            return (Criteria) this;
        }

        public Criteria andControllerTypeNotBetween(Short value1, Short value2) {
            addCriterion("CONTROLLER_TYPE not between", value1, value2, "controllerType");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumIsNull() {
            addCriterion("SAME_SUPPLY_NUM is null");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumIsNotNull() {
            addCriterion("SAME_SUPPLY_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumEqualTo(Short value) {
            addCriterion("SAME_SUPPLY_NUM =", value, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumNotEqualTo(Short value) {
            addCriterion("SAME_SUPPLY_NUM <>", value, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumGreaterThan(Short value) {
            addCriterion("SAME_SUPPLY_NUM >", value, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumGreaterThanOrEqualTo(Short value) {
            addCriterion("SAME_SUPPLY_NUM >=", value, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumLessThan(Short value) {
            addCriterion("SAME_SUPPLY_NUM <", value, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumLessThanOrEqualTo(Short value) {
            addCriterion("SAME_SUPPLY_NUM <=", value, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumIn(List<Short> values) {
            addCriterion("SAME_SUPPLY_NUM in", values, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumNotIn(List<Short> values) {
            addCriterion("SAME_SUPPLY_NUM not in", values, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumBetween(Short value1, Short value2) {
            addCriterion("SAME_SUPPLY_NUM between", value1, value2, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andSameSupplyNumNotBetween(Short value1, Short value2) {
            addCriterion("SAME_SUPPLY_NUM not between", value1, value2, "sameSupplyNum");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdIsNull() {
            addCriterion("EMPTY_AREA_ID is null");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdIsNotNull() {
            addCriterion("EMPTY_AREA_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdEqualTo(String value) {
            addCriterion("EMPTY_AREA_ID =", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdNotEqualTo(String value) {
            addCriterion("EMPTY_AREA_ID <>", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdGreaterThan(String value) {
            addCriterion("EMPTY_AREA_ID >", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdGreaterThanOrEqualTo(String value) {
            addCriterion("EMPTY_AREA_ID >=", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdLessThan(String value) {
            addCriterion("EMPTY_AREA_ID <", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdLessThanOrEqualTo(String value) {
            addCriterion("EMPTY_AREA_ID <=", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdLike(String value) {
            addCriterion("EMPTY_AREA_ID like", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdNotLike(String value) {
            addCriterion("EMPTY_AREA_ID not like", value, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdIn(List<String> values) {
            addCriterion("EMPTY_AREA_ID in", values, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdNotIn(List<String> values) {
            addCriterion("EMPTY_AREA_ID not in", values, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdBetween(String value1, String value2) {
            addCriterion("EMPTY_AREA_ID between", value1, value2, "emptyAreaId");
            return (Criteria) this;
        }

        public Criteria andEmptyAreaIdNotBetween(String value1, String value2) {
            addCriterion("EMPTY_AREA_ID not between", value1, value2, "emptyAreaId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMPTY_CARRIER_CONTROLLER
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}