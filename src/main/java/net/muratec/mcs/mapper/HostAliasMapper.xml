<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.muratec.mcs.mapper.HostAliasMapper">
  <resultMap id="BaseResultMap" type="net.muratec.mcs.model.HostAlias">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="KEY" jdbcType="VARCHAR" property="key" />
    <id column="CATEGORY" jdbcType="VARCHAR" property="category" />
    <result column="ALIAS" jdbcType="VARCHAR" property="alias" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    KEY, CATEGORY, ALIAS
  </sql>
  <select id="selectByExample" parameterType="net.muratec.mcs.model.HostAliasExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HOST_ALIAS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="net.muratec.mcs.model.HostAliasKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from HOST_ALIAS
    where KEY = #{key,jdbcType=VARCHAR}
      and CATEGORY = #{category,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="net.muratec.mcs.model.HostAliasKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from HOST_ALIAS
    where KEY = #{key,jdbcType=VARCHAR}
      and CATEGORY = #{category,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.muratec.mcs.model.HostAliasExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from HOST_ALIAS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.muratec.mcs.model.HostAlias">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into HOST_ALIAS (KEY, CATEGORY, ALIAS
      )
    values (#{key,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.muratec.mcs.model.HostAlias">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into HOST_ALIAS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="key != null">
        KEY,
      </if>
      <if test="category != null">
        CATEGORY,
      </if>
      <if test="alias != null">
        ALIAS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.muratec.mcs.model.HostAliasExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from HOST_ALIAS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HOST_ALIAS
    <set>
      <if test="record.key != null">
        KEY = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        CATEGORY = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null">
        ALIAS = #{record.alias,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HOST_ALIAS
    set KEY = #{record.key,jdbcType=VARCHAR},
      CATEGORY = #{record.category,jdbcType=VARCHAR},
      ALIAS = #{record.alias,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.muratec.mcs.model.HostAlias">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HOST_ALIAS
    <set>
      <if test="alias != null">
        ALIAS = #{alias,jdbcType=VARCHAR},
      </if>
    </set>
    where KEY = #{key,jdbcType=VARCHAR}
      and CATEGORY = #{category,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.muratec.mcs.model.HostAlias">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HOST_ALIAS
    set ALIAS = #{alias,jdbcType=VARCHAR}
    where KEY = #{key,jdbcType=VARCHAR}
      and CATEGORY = #{category,jdbcType=VARCHAR}
  </update>
  <!-- ここより、独自SQLを記載する -->
  <!-- MACS4#0047 Del Start -->
  <!-- 
  <select id="selectEqpLocation" resultType="java.lang.String">
    select distinct
      KEY
    from
      HOST_ALIAS
    where
      CATEGORY = 'MCS'
    order by
      KEY ASC
  </select>

  <select id="selectEqpPort" resultType="java.lang.String">
    select distinct
      KEY
    from
      HOST_ALIAS
    where
      CATEGORY = 'MCS'
      and KEY like #{eqpId} ESCAPE '${@net.muratec.mcs.common.ComConst@SQL_ESCAPE}'
    order by
      KEY ASC
  </select>
  -->
  <!-- MACS4#0047 Del End -->

  <resultMap id="MCSBaseResultMap" type="net.muratec.mcs.model.HostAliasModel">
    <id column="KEY" jdbcType="VARCHAR" property="hostKeyName" />
    <id column="ALIAS" jdbcType="VARCHAR" property="mcsKeyName" />
  </resultMap>

  <select id="selectHostAliasList" parameterType="net.muratec.mcs.entity.common.AjaxDataTablesReqBaseEntity" resultMap="MCSBaseResultMap">
    select
      KEY,
      ALIAS
    from (
      select
        row_number() over(order by HA1.KEY asc) rn,
        HA1.KEY,
        HA1.ALIAS
      from HOST_ALIAS HA1 inner join HOST_ALIAS HA2 on HA1.KEY = HA2.ALIAS and HA2.KEY = HA1.ALIAS
      where HA1.CATEGORY = 'MCS' and HA2.CATEGORY = 'HOST'
      order by HA1.KEY asc
    )
    <if test="fromRecordNum != null and toRecordNum != null">
      where
        rn between #{fromRecordNum,jdbcType=DECIMAL} and
        #{toRecordNum,jdbcType=DECIMAL}
    </if>
  </select>

  <select id="hostAliasCountByExample" parameterType="net.muratec.mcs.model.HostAliasExample" resultType="java.lang.Long">
    select count(*)
    from
      HOST_ALIAS HA1 inner join HOST_ALIAS HA2 on HA1.KEY = HA2.ALIAS and HA2.KEY = HA1.ALIAS
    where
      HA1.CATEGORY = 'MCS' and HA2.CATEGORY = 'HOST'
  </select>

  <select id="modifyHostAliasList" parameterType="map" resultMap="MCSBaseResultMap">
    select HA1.KEY,HA1.ALIAS
    from
      HOST_ALIAS HA1 inner join HOST_ALIAS HA2 on HA2.KEY = HA1.ALIAS and HA2.ALIAS = HA1.KEY
    where
      HA1.KEY = #{hostKeyName,jdbcType=VARCHAR} and
      HA1.CATEGORY = 'MCS' and
      HA2.KEY = #{mcsKeyName,jdbcType=VARCHAR} and
      HA2.CATEGORY = 'HOST'
  </select>

  <insert id="insertHostAlias" parameterType="net.muratec.mcs.model.HostAliasModel">
    insert all
    into HOST_ALIAS(
      KEY,
      CATEGORY,
      ALIAS
    )
    values (
      #{hostKeyName,jdbcType=VARCHAR},
      'MCS',
      #{mcsKeyName,jdbcType=VARCHAR}
    )
    into HOST_ALIAS(
      KEY,
      CATEGORY,
      ALIAS
    )
    values (
      #{mcsKeyName,jdbcType=VARCHAR},
      'HOST',
      #{hostKeyName,jdbcType=VARCHAR}
    )
    select * from dual
  </insert>
  <update id="updateHostAlias" parameterType="net.muratec.mcs.model.HostAliasModel">
    update
      HOST_ALIAS
    set
      KEY = case
        when (KEY = #{hostKeyNameChangeBefore,jdbcType=VARCHAR} and CATEGORY = 'MCS')
          then #{hostKeyName,jdbcType=VARCHAR}
        when (KEY = #{mcsKeyNameChangeBefore,jdbcType=VARCHAR} and CATEGORY = 'HOST')
          then #{mcsKeyName,jdbcType=VARCHAR}
      end,
      ALIAS = case
        when (KEY = #{hostKeyNameChangeBefore,jdbcType=VARCHAR} and CATEGORY = 'MCS')
          then #{mcsKeyName,jdbcType=VARCHAR}
        when (KEY = #{mcsKeyNameChangeBefore,jdbcType=VARCHAR} and CATEGORY = 'HOST')
          then #{hostKeyName,jdbcType=VARCHAR}
      end
    where
      (
        KEY = #{hostKeyNameChangeBefore,jdbcType=VARCHAR} and
        CATEGORY = 'MCS' and
        ALIAS = #{mcsKeyNameChangeBefore,jdbcType=VARCHAR}
      ) or
      (
        KEY = #{mcsKeyNameChangeBefore,jdbcType=VARCHAR} and
        CATEGORY = 'HOST' and
        ALIAS = #{hostKeyNameChangeBefore,jdbcType=VARCHAR}
      )
  </update>

  <select id="selectMcsAliasByKey" resultType="java.lang.String">
    select
      ALIAS
    from
      HOST_ALIAS
    where
      KEY = #{key,jdbcType=VARCHAR} AND
      CATEGORY = 'MCS'
  </select>

  <select id="selectHostAliasByKey" resultType="java.lang.String">
    select
      ALIAS
    from
      HOST_ALIAS
    where
      KEY = #{key,jdbcType=VARCHAR} AND
      CATEGORY = 'HOST'
  </select>
  
  <select id="selectPGVPortList" resultType="java.lang.String">
    select
      TRIM(SUBSTR(ALIAS, INSTR(ALIAS, ' '))) as ALIAS
    from
      (select
         PORT_ID
       from
         PORT
       where
         AMHS_ID = #{key,jdbcType=VARCHAR} AND
         PORT_TYPE = 1 AND
         IO_MODE in (2, 3)
      ) P,
      HOST_ALIAS HA
    where
      P.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST'
    order by ALIAS
  </select>

  <select id="selectOhbPortList" resultType="java.lang.String">
    select
      TRIM(SUBSTR(ALIAS, INSTR(ALIAS, ' '))) as ALIAS
    from
      (select
         PORT_ID
       from
         OHB_PORT_RLT
       where
         OHB_ID = #{key,jdbcType=VARCHAR} 
      ) OPR,
      HOST_ALIAS HA
    where
      OPR.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST'
    order by ALIAS
  </select>

  <select id="selectInputEQControllerList" resultType="java.lang.String">
    select distinct
      TRIM(SUBSTR(HA.ALIAS, 0,INSTR(HA.ALIAS, ' '))) as ALIAS
    from
      HOST_ALIAS HA,
      AMHS A,
      PORT P
    where
      P.PORT_TYPE = 11 AND
      P.IO_MODE in (1, 3) AND
      A.AMHS_ID = P.AMHS_ID AND
      P.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST'
    order by ALIAS
  </select>

  <select id="selectOutputEQControllerList" resultType="java.lang.String">
    select distinct
      TRIM(SUBSTR(HA.ALIAS, 0,INSTR(HA.ALIAS, ' '))) as ALIAS
    from
      HOST_ALIAS HA,
      AMHS A,
      PORT P
    where
      P.PORT_TYPE = 11 AND
      P.IO_MODE in (2, 3) AND
      A.AMHS_ID = P.AMHS_ID AND
      P.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST'
    order by ALIAS
  </select>

  <select id="selectInputEQPortList" resultType="java.lang.String">
    select
      TRIM(SUBSTR(ALIAS, INSTR(ALIAS, ' '))) as ALIAS
    from
      (select
         PORT_ID
       from
         PORT
       where
         PORT_TYPE = 11 AND
         IO_MODE in (1, 3)
      ) P,
      HOST_ALIAS HA
    where
      P.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST' AND
      HA.ALIAS like concat(#{key,jdbcType=VARCHAR}, '%')
    order by ALIAS
  </select>

  <select id="selectOutputEQPortList" resultType="java.lang.String">
    select
      TRIM(SUBSTR(ALIAS, INSTR(ALIAS, ' '))) as ALIAS
    from
      (select
         PORT_ID
       from
         PORT
       where
         PORT_TYPE = 11 AND
         IO_MODE in (2, 3)
      ) P,
      HOST_ALIAS HA
    where
      P.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST' AND
      HA.ALIAS like concat(#{key,jdbcType=VARCHAR}, '%')
    order by ALIAS
  </select>

  <select id="selectOPPPortList" resultType="java.lang.String">
    select
      TRIM(SUBSTR(ALIAS, INSTR(ALIAS, ' '))) as ALIAS
    from
      (select
         PORT_ID
       from
         PORT
       where
         AMHS_ID = #{key,jdbcType=VARCHAR} AND
         PORT_TYPE = 2 AND
         IO_MODE in (2, 3)
      ) P,
      HOST_ALIAS HA
    where
      P.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST'
    order by ALIAS
  </select>

  <select id="selectIoEQControllerList" resultType="java.lang.String">
  select distinct
    ALIAS
  from
    (select
      TRIM(SUBSTR(HA.ALIAS, 0,INSTR(HA.ALIAS, ' '))) as ALIAS,
      A.AMHS_ID as AMHS_ID
    from
      HOST_ALIAS HA,
      AMHS A,
      PORT P
    where
      P.PORT_TYPE = 11 AND
      A.AMHS_ID = P.AMHS_ID AND
      P.PORT_ID = HA.KEY AND
      HA.CATEGORY = 'HOST')
  where
    not ALIAS = AMHS_ID
  order by ALIAS
  </select>

  <select id="selectIoEQPortList" resultType="java.lang.String">
    select
      ALIAS
    from
      (select
         PORT_ID
       from
         PORT
       where
         PORT_TYPE = 11
      ) P,
      HOST_ALIAS HA
    where
      P.PORT_ID = HA.ALIAS AND
      HA.CATEGORY = 'MCS' AND
      HA.KEY like concat(#{key,jdbcType=VARCHAR}, '%')
    order by ALIAS
  </select>
</mapper>
